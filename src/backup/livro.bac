<template>
  <div id="livrar">
    <!-- <router-view></router-view> -->

    <div class="container">

    <v-dialog
        v-model="dialog2"
        max-width="500px"
      >
        <v-card>
          <v-card-title>
            {{ nomeCerto }}
          </v-card-title>
          <v-card-text>
            <v-form class="px-3" ref="form">
            <v-text-field label="Nome do livro" v-model="livro.nomeLivro" :rules="[rules.required]" :counter="20" append-icon="mdi-book-open-page-variant"></v-text-field>
            <v-text-field label="Nome do autor" v-model="livro.autor" :rules="[rules.required]" :counter="20" append-icon="mdi-account-box-multiple"></v-text-field>
            <v-text-field label="Quantidade" v-model="livro.quant" :rules="[rules.required]" append-icon="mdi-numeric"></v-text-field>
            <v-select
            v-model="livro.editora.codEditora"
            :items="editoras"
            :item-text="'nomeEditora'"
            :item-value="'codEditora'"
            :rules="[v => !!v || 'Editora é obrigatório']"
            label="Editora do livro"
            menu-props="auto"
            append-icon="mdi-bookshelf"
            hide-details
            single-line
            required
          ></v-select>
               

          <v-col
          cols="12"
          sm="14"
          md="14"
          >
      <v-menu
        ref="menu"
        v-model="menu"
        :close-on-content-click="false"
        :return-value.sync="livro.lancamento"
        transition="scale-transition"
        offset-y
        min-width="auto"
      >
        <template v-slot:activator="{ on, attrs }">
          <v-text-field
            v-model="livro.lancamento"
            label="Lançamento"
            append-icon="mdi-calendar"
            readonly
            v-bind="attrs"
            v-on="on"
          ></v-text-field>
        </template>
        <v-date-picker
          v-model="livro.lancamento"
          no-title
          scrollable
        >
          <v-spacer></v-spacer>
          
          <v-btn text color="primary" @click="menu = false"> Cancel </v-btn>

         <v-btn text color="primary" @click="$refs.menu.save(livro.lancamento)" > OK </v-btn>

        </v-date-picker>
      </v-menu>
    </v-col>
            
            </v-form>
          </v-card-text>
          <v-card-actions>
            <v-btn color="error" text @click="dialog2 = false" >
              Fechar
            </v-btn>
            <v-btn color="primary" text @click="salvar">
              Salvar
            </v-btn>
          </v-card-actions>
        </v-card>
      </v-dialog>
        <tbody>
          <v-card>
          <v-card-title>
            Livros
            <v-divider
          class="mx-4"
          inset
          vertical
        ></v-divider><v-btn class="ma-2" dark color="blue"  rounded @click="dialog2 = true, nomeCerto = 'Cadastrar Livro' , livro = {}">Novo
    <v-icon dark>
        mdi-plus
      </v-icon>
    </v-btn>
            <v-spacer></v-spacer>
            <v-text-field
              v-model="search"
              append-icon="mdi-magnify"
              label="Pesquisa"
              single-line
              hide-details
            ></v-text-field>
          </v-card-title>
            <v-data-table
                :headers="headers"
                :items="livros"
                :items-per-page="5"
                :search="search"
                class="elevation-1"
                loading="items"
                loading-text="Carregando dados... Aguarde!"
            >
            <!-- eslint-disable-next-line -->
            <template v-slot:item.acoes="{ item }">
               <v-btn color="primary" text small rounded @click="showEdit(item)">
              <v-icon dark>
                mdi-pencil
              </v-icon>
            </v-btn>
          <v-btn color="error" text small rounded @click="remover(item)">
              <v-icon dark>
                mdi-delete
              </v-icon>
            </v-btn>
            </template>
          </v-data-table>
          </v-card>

        </tbody>
      
      <v-btn class="ma-2" color="blue" dark @click="irParaInicio">
        <v-icon dark left >
          mdi-arrow-left
        </v-icon>Voltar
      </v-btn>

    </div>
  </div>
</template>

<script>
import Livro from "../services/livros";
import Editora from "../services/editoras";
import Swal from "sweetalert2";

export default {
  name: "livrar",
  data() {
    return {
      livro: {
        id: "",
        nomeLivro: "",
        autor: "",
        quant: "",
        lancamento: "",
        editora: {
          codEditora: "",
        },
      },
      livros: [],
      editora: {
        codEditora: "",
        nomeEditora: "",
        cidade: "",
      },
      editoras: [],
      errors: [],
      search: '',
      headers: [
          { text: 'ID', value: 'id', class:'blue accent-2, white--text' },
          { text: 'NOME', value: 'nomeLivro', class:'blue accent-2, white--text' },
          { text: 'AUTOR', value: 'autor', class:'blue accent-2, white--text'},
          { text: 'EDITORA', value: 'nomeEditora', class:'blue accent-2, white--text'},
          { text: 'LANÇAMENTO', value: 'lancamento', class:'blue accent-2, white--text' },
          { text: 'QUANTIDADE', value: 'quant', class:'blue accent-2, white--text' },
          { text: 'AÇÕES', value: 'acoes', class:'blue accent, white--text', sortable: false },
        
        ],
          date: new Date().toISOString().substr(0, 10),
          menu: false,
          modal: false,
          menu2: false,
        nomeCerto: "",
        dialog2: false,
        notifications: false,
        sound: true,
        widgets: false,
        rules: {
          required: value => !!value || 'Este campo é obrigatório.',
          max: value=> value.length <= 20 || 'Máximo de 20 caracteres.',
          min: value=> value.length >= 3 || 'Mínimo de 3 caracteres.',
        },
        picker: new Date().toISOString().substr(0, 10),
    }
  },
  mounted() {
    this.listar();
  },
  computed: {
      shouldDisableSaveButtomComputed(){
        return this.livro.nomeLivro.trim().length == 0 || this.livro.autor.trim().length == 0 || this.livro.quant.trim().length == 0 || this.livro.lancamento == 0
      }
    },

  methods: {
    irParaInicio() {
      this.$router.push("/");
    },
    listar() {
      Livro.listar().then((resposta) => {
        console.log("livros", resposta.data);
        this.livros = resposta.data;
      }),
        Editora.listar().then((resposta) => {
          console.log("editoras", resposta.data);
          this.editoras = resposta.data;
        });
    },

    salvar() {
      console.log(this.livro)
      if(this.$refs.form.validate()){
      if (!this.livro.id) {
        Livro.salvar(this.livro).then((resposta) => {
          // this.livro = {};
          this.livro = this.getLivroDefault();
          console.log(resposta.data);
          Swal.fire("", "Salvo com sucesso", "success");
          this.listar();
          this.dialog2 = false;
          this.errors = {};
        });
      } else {
        Livro.alterar(this.livro).then((resposta) => {
          // this.livro = {};
          this.livro = this.getLivroDefault();
          console.log(resposta.data);
          Swal.fire("", "Alterado com sucesso", "success");
          this.listar();
          this.dialog2 = false;
          this.errors = {};
        });
      }
      }
    },
    showEdit(livro){
      console.log("livro", livro)
      this.nomeCerto = "Editar Livro"
      this.dialog2 = true;
      this.livro = { ...livro }
    },
    nameOfMethod(){
        if (this.livro.id  != ""){
          return this.livro.codEditora;
        }else{
          return this.livro.editora.codEditora;
        }  
    },
    getLivroDefault() {
      return {
        id: "",
        nomeLivro: "",
        autor: "",
        quant: "",
        lancamento: "",
        editora: {
          codEditora: "",
        },
      };
    },

    editar(livro) {
      console.log(livro);
      this.livro = {
        id: livro.id,
        nomeLivro: livro.nomeLivro,
        autor: livro.autor,
        quant: livro.quant,
        lancamento: livro.lancamento,
        editora: {
          codEditora: livro.codEditora,
        },
      };
    },
    remover(livro) {
      console.log(livro);
      Swal.fire({
        title: "Você quer realmente apagar?",
        showDenyButton: true,
        confirmButtonText: "Apagar",
        denyButtonText: "Não apagar",
      }).then((resposta) => {
        if (resposta.isConfirmed) {
          Livro.apagar(livro).then((resposta) => {
            console.log(resposta.data);
            Swal.fire("Apagado com sucesso", "", "success");
            this.listar();
          });
        } else if (resposta.isDenied) {
          Swal.fire("Não apagado", "", "info");
        }
      });
    },
  },
};
</script>

<style scoped>
#footerp {
  text-align: center;
}
#tabela {
  margin-top: 10px;
}
#plus{
  position: absolute;
  right: 16%;
  top: 20px;
}
input:hover {
  border-color: #000407aa;
}
select:hover {
  border-color: #2392f0;
}
th:hover {
  border-color: #000407;
}
</style>
